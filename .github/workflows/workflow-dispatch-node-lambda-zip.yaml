name: üöÄ Deploy Lambda with Zip

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to stg & prd"
        required: true
        type: string
      platform:
        description: "Platform to run on"
        required: false
        default: "ubuntu-latest"
        type: string
      additionalInstallOptions:
        description: "Additional options for npm install"
        required: false
        default: "" # Set your default additional options here
        type: string
      functionName:
        description: "Name of the Lambda function to update"
        required: true
        type: string
      nodeVersionFile:
        description: "Path to the .nvmrc file for Node.js version"
        required: false
        default: ".nvmrc"
        type: string
      awsIamArn:
        description: "AWS IAM ARN"
        required: false
        default: ""
        type: string
      commitGithubSHA:
        description: "Github SHA of target commit on the target repo and branch"
        required: false
        default: ""
        type: string
    secrets:
      SENTRY_AUTH_TOKEN:
        description: "Sentry auth token"
        required: true

jobs:
  deploy_zip:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        platform:
          - ${{ github.event.inputs.platform }}

    steps:
      - name: Debug environment
        run: |
          echo "variables: ${{ toJSON(vars)}}"
          echo "env: ${{ inputs.environment }}"

      - name: ‚è≥ Checkout
        uses: actions/checkout@v3

      - name: üîã Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ inputs.nodeVersionFile }}
          node-version: ${{ env.NODE_VERSION || '18' }}

      - name: üì• Install dependencies (all)
        env:
          HUSKY: 0
        run: |
          npm ci ${{ inputs.additionalInstallOptions }}

      - name: üõ†Ô∏è Build lambda
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          GITHUB_SHA: ${{ inputs.commitGithubSHA || github.sha }}
        run: npm run build

      - name: üì• Install dependencies (production)
        env:
          HUSKY: 0
        run: |
          rm -rf node_modules
          npm pkg set scripts.prepare="node -e \"if (process.env.NODE_ENV !== 'production') { require('husky').install() }\""
          npm ci --omit=dev

      - name: üî© Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-skip-session-tagging: true
            role-to-assume: ${{ inputs.awsIamArn }}
            role-session-name: gh-actions
            aws-region: ap-southeast-1

      - name: üì¶ Zip package to upload
        run: |
          cd dist && zip -r ../lambda.zip .
          cd .. && zip -r lambda.zip ./node_modules
          zip -r lambda.zip ./package.json

      - name: üöÄ Deploy lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ inputs.functionName }}-${{ inputs.environment }} \
            --zip-file fileb://lambda.zip
